{"version":3,"sources":["componentes/AddCategory.js","helpers/getGifs.js","hooks/useFetchGifs.js","componentes/GifGridItem.js","componentes/GifGrid.js","componentes/GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","onChange","target","value","placeholder","type","getGifs","categoria","a","url","encodeURI","fetch","res","json","data","gifs","map","img","id","title","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","imgs","setTimeout","GifGridItem","className","src","alt","GifGrid","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"mMAoCeA,EAjCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAEnB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAc,SAACS,GAAD,OAAUP,GAAV,mBAAyBO,OACvCN,EAAc,MAKlB,SACI,uBACIO,SAhBc,SAACL,GACvBF,EAAeE,EAAEM,OAAOC,QAgBhBC,YAAY,iBACZC,KAAK,OACLF,MAAQV,O,+BCRTa,EAhBF,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACNC,EADM,iDAC2CC,UAAWH,GADtD,+DAEMI,MAAMF,GAFZ,cAENG,EAFM,gBAGWA,EAAIC,OAHf,uBAGJC,EAHI,EAGJA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAT9B,kBAaLM,GAbK,4CAAH,sDCuBEO,EAtBM,SAAEf,GAEnB,MAA0Bf,mBAAS,CAC/BsB,KAAM,GACNS,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBAAW,WACPpB,EAASC,GACJoB,MAAM,SAAAC,GACHC,YAAW,WACPJ,EAAS,CACLX,KAAMc,EACNL,SAAS,MAEd,UAEZ,CAAEhB,IAEEiB,GCHIM,EAhBK,SAAC,GAAuB,EAArBZ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAE9B,OACI,sBAAKsB,UAAU,yCAAf,UACI,qBAAKC,IAAMvB,EAAMwB,IAAMd,IACvB,4BAAKA,QCyBFe,EA5BC,SAAC,GAAmB,IAAjB3B,EAAgB,EAAhBA,UAEf,EAAiCe,EAAcf,GAAlCa,EAAb,EAAQN,KAAaS,EAArB,EAAqBA,QAErB,OACI,qCACI,6BAAMhB,IAEHgB,GAAW,mBAAGQ,UAAU,mCAAb,yBAEd,qBAAKA,UAAU,YAAf,SAEQX,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADCA,EAAIC,aCWvBiB,EAxBM,WAEjB,MAAoC3C,mBAAS,CAAC,WAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAEA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ6C,EAAWpB,KAAK,SAAAT,GAAS,OACrB,cAAC,EAAD,CAEIA,UAAYA,GADNA,Y,MCflC8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.93a03d57.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst AddCategory = ({ setCategorias }) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setInputValue( e.target.value );\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if ( inputValue.trim().length > 2){\n            setCategorias((cat) => [inputValue, ...cat]);\n            setInputValue('');\n        }\n    };\n\n    return (\n        <form onSubmit={ handleSubmit }>\n            <input \n                onChange={ handleInputChange }\n                placeholder=\"Buscar Gifs...\"\n                type=\"text\"\n                value={ inputValue }\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategorias: PropTypes.func.isRequired,\n}\n\nexport default AddCategory\n","\n\nconst getGifs = async( categoria ) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( categoria ) }&limit=10&api_key=Gf3cvyWZDbQr4IaiFYeSErgkbHXIYKCB`;\n    const res = await fetch(url);\n    const { data } = await res.json();\n\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        };\n    });\n\n    return gifs;\n}\n\nexport default getGifs;","import { useState, useEffect } from 'react';\nimport getGifs from '../helpers/getGifs';\n\nconst useFetchGifs = ( categoria ) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true,\n    });\n\n    useEffect( () => {\n        getGifs( categoria )\n            .then( imgs => {\n                setTimeout(() => {\n                    setState({\n                        data: imgs,\n                        loading: false,\n                    });\n                }, 1000);\n            });\n    }, [ categoria ]);\n\n    return state;\n};\n\nexport default useFetchGifs;\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst GifGridItem = ({ id, title, url }) => {\n\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={ url } alt={ title }/>\n            <p>{ title }</p>\n        </div>\n    )\n}\n\nGifGridItem.propTypes = {\n    id:    PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    url:   PropTypes.string.isRequired,\n}\n\nexport default GifGridItem\n","import React from 'react';\nimport PropTypes from 'prop-types'\nimport useFetchGifs from '../hooks/useFetchGifs';\nimport GifGridItem from './GifGridItem';\n\nconst GifGrid = ({ categoria }) => {\n\n    const { data:images, loading } = useFetchGifs( categoria );\n\n    return (\n        <>\n            <h3>{ categoria }</h3>\n\n            {  loading && <p className=\"animate__animated animate__flash\">Cargando...</p> }\n\n            <div className=\"card-grid\"> \n                { \n                    images.map( img => (\n                        <GifGridItem\n                            key={ img.id } \n                            { ...img }\n                        />\n                    )) \n                }\n            </div>\n        </>\n    )\n}\n\nGifGrid.propTypes = {\n    categoria: PropTypes.string,\n}\n\nexport default GifGrid\n","import React, { useState } from 'react'\nimport AddCategory from './AddCategory';\nimport GifGrid from './GifGrid';\n\n/* test comment */\n\nconst GifExpertApp = () => {\n\n    const [categorias, setCategorias] = useState(['Techno']);\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategorias={ setCategorias }/>\n            <hr />\n\n            <ol>\n                {\n                    categorias.map( categoria => (\n                        <GifGrid\n                            key={ categoria }\n                            categoria={ categoria } \n                        /> \n                    ))\n                }\n            </ol>\n        </>\n    )\n};\n\nexport default GifExpertApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './componentes/GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}